@using Microsoft.Owin.Security.DataHandler
@model BoublikSystem.Models.ApplicationUser

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ApplicationUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { Value = "", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
            </div>
        </div>
        <table>
            <thead><strong>Права пользователя</strong></thead>

            @foreach (var role in Model.Roles)
            {

                foreach (var r in ViewBag.Roles)
                {
                    if (r.Id == role.RoleId)
                    {
                        <tr>
                            <td>@r.Name</td>

                        </tr>

                    }

                }

            }
        </table>
        <br />
        <hr />


        @foreach (var role in (Dictionary<string, bool>)ViewBag.RolesDictionary)
        {

            if (role.Value == true)
            {
                <div class="checkbox">
                    <label><input type="checkbox" value="@role.Key" name="selectedRoles" checked="checked">@role.Key</label>
                </div>
            }
            else
            {
                <div class="checkbox">
                    <label><input type="checkbox" value="@role.Key" name="selectedRoles">@role.Key</label>
                </div>
            }
            @*foreach (var roleId in ViewBag.AvailableRolesForCheckboxes)
                {

                    if (roleId == role.Id)
                    {
                        <div class="checkbox">
                            <label><input type="checkbox" value="@role.Id" name="selectedRoles" checked="checked">@role.Name</label>
                        </div>
                    }
                    else if (roleId != role.Id)
                    {
                        <div class="checkbox">
                            <label><input type="checkbox" value="@role.Id" name="selectedRoles">@role.Name</label>
                        </div>
                    }*@

        }
        @*@foreach (Dictionary<string,bool> role in ViewBag.RolesChecked)
             {
                 for (int i = 0; i < role.Count; i++)
                 {
                      @Html.CheckBoxFor(m => role[i.ToString()])
                 }

            }*@




        <br />
        <div class="form-group">
            @Html.DropDownListFor(m => m.SelectedRole, new SelectList(ViewBag.Roles, "Id", "Name"), "--Права--", new { @class = "form-control" })

            <p style="color: #b94a48; background-color: #f2dede; border-color: #eed3d7; -webkit-border-radius: 4px; -moz-border-radius: 4px; border-radius: 4px">
                <strong>@Html.ValidationMessageFor(model => model.SallerLocation)</strong>

            </p>
        </div>
        <div class="form-group">
            @Html.DropDownListFor(m => m.SallerLocation, new SelectList(ViewBag.SalePoints, "Value", "Text"), "--Точка расположения--", new { @class = "form-control" })

            <p style="color: #b94a48; background-color: #f2dede; border-color: #eed3d7; -webkit-border-radius: 4px; -moz-border-radius: 4px; border-radius: 4px">
                <strong>@Html.ValidationMessageFor(model => model.SallerLocation)</strong>

            </p>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        <p>
            test data
        </p>
        <p>
            SallerLocation = @Model.SallerLocation<br />
            SelectedRole = @Model.SelectedRole
            RolesCount = @Model.Roles.Count
        </p>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "CrudUser")
</div>
